package ru.mospolytech.gorskii.PassManager.ui;

import java.util.HexFormat;
import ru.mospolytech.gorskii.PassManager.App;

/**
 * Окно входа в приложение
 *
 * @author Горский Владислав, группа 221-3210
 */
public class AuthFrame extends javax.swing.JFrame {

    public AuthFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enterButton = new javax.swing.JButton();
        pinTextField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Password Manager");

        enterButton.setText("Войти");
        enterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonActionPerformed(evt);
            }
        });

        pinTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pinTextFieldKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(enterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pinTextField))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(pinTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enterButton)
                .addContainerGap(141, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonActionPerformed
        App.ENTRY_LIST = App.getEntriesFromFile(HexFormat.of().formatHex(new String(this.pinTextField.getPassword()).getBytes()));
        if (!App.ENTRY_LIST.isEmpty()) {
            java.awt.EventQueue.invokeLater(() -> {
                new AppFrame().setVisible(true);
            });
            this.setVisible(false);
        } else {
            javax.swing.JOptionPane.showConfirmDialog(this, "Неверный пин-код!", "Ошибка", javax.swing.JOptionPane.OK_CANCEL_OPTION, javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_enterButtonActionPerformed

    private void pinTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pinTextFieldKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)
            this.enterButtonActionPerformed(null);
    }//GEN-LAST:event_pinTextFieldKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton enterButton;
    private javax.swing.JPasswordField pinTextField;
    // End of variables declaration//GEN-END:variables
}
